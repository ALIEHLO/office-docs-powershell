### YamlMime:PowershellCmdlet
summary: |-
  This cmdlet is available only in Security & Compliance Center PowerShell. For more information, see [Security & Compliance Center PowerShell](https://docs.microsoft.com/powershell/exchange/scc-powershell).

  Use the New-AppRetentionCompliancePolicy to create app retention compliance policies. App retention & labeling policies target new ways to scope and manage policies.

  For information about the parameter sets in the Syntax section below, see [Exchange cmdlet syntax](https://docs.microsoft.com/powershell/exchange/exchange-cmdlet-syntax).
module: ExchangePowerShell
notes: ""
inputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href=" " data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  New-AppRetentionCompliancePolicy [-Name] <String> -AdaptiveScopeLocation <MultiValuedProperty> -Applications <String[]>

   [-Confirm]

   [-Comment <String>]

   [-Enabled <Boolean>]

   [-Force]

   [-RestrictiveRetention <Boolean>]

   [-WhatIf]

   [<CommonParameters>]
- >-
  New-AppRetentionCompliancePolicy [-Name] <String> -Applications <String[]>

   [-Comment <String>]

   [-Confirm]

   [-Enabled <Boolean>]

   [-ExchangeLocation <MultiValuedProperty>]

   [-ExchangeLocationException <MultiValuedProperty>]

   [-Force]

   [-ModernGroupLocation <MultiValuedProperty>]

   [-ModernGroupLocationException <MultiValuedProperty>]

   [-RestrictiveRetention <Boolean>]

   [-WhatIf]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    New-AppRetentionCompliancePolicy -Name "Regulation 567 Compliance" -Applications "User:MicrosoftTeams,Yammer","Group:MicrosoftTeams,Yammer" -ExchangeLocation "Jennifer Petersen","Kitty Nakamura"
  description: |-
    This example creates a static scope retention policy named Regulation 567 Compliance for the Yammer user messages of Jennifer Petersen and Kitty Nakamura.

    After you create the retention policy, use the New-AppRetentionComplianceRule cmdlet to create a retention rule and assign it the retention policy to it.
  summary: ""
parameters:
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: AdaptiveScopeLocation
  isRequired: true
  description: |+
    {{ Fill AdaptiveScopeLocation Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Applications
  isRequired: true
  description: |+
    {{ Fill Applications Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Comment
  description: |+
    The Comment parameter specifies an optional comment. If you specify a value that contains spaces, enclose the value in quotation marks ("), for example: "This is an admin note".

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    The Confirm switch specifies whether to show or hide the confirmation prompt. How this switch affects the cmdlet depends on if the cmdlet requires confirmation before proceeding.

    - Destructive cmdlets (for example, Remove-\* cmdlets) have a built-in pause that forces you to acknowledge the command before proceeding. For these cmdlets, you can skip the confirmation prompt by using this exact syntax: `-Confirm:$false`.
    - Most other cmdlets (for example, New-\* and Set-\* cmdlets) don't have a built-in pause. For these cmdlets, specifying the Confirm switch without a value introduces a pause that forces you acknowledge the command before proceeding.

  defaultValue: None
  position: Named
  aliases: cf
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: Enabled
  description: |+
    The Enabled parameter enables or disables the policy. Valid values are:

    - $true: The policy is enabled. This is the default value.
    - $false: The policy is disabled.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: ExchangeLocation
  description: |+
    {{ Fill ExchangeLocation Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: ExchangeLocationException
  description: |+
    {{ Fill ExchangeLocationException Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    The Force switch hides warning or confirmation messages. You don't need to specify a value with this switch.

    You can use this switch to run tasks programmatically where prompting for administrative input is inappropriate.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: ModernGroupLocation
  description: |+
    {{ Fill ModernGroupLocation Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="MultiValuedProperty" data-throw-if-not-resolved="False" />
  name: ModernGroupLocationException
  description: |+
    {{ Fill ModernGroupLocationException Description }}

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The Name parameter specifies a unique name for the app retention compliance policy. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks (").

  defaultValue: None
  position: "0"
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="Boolean" data-throw-if-not-resolved="False" />
  name: RestrictiveRetention
  description: |+
    The RestrictiveRetention parameter specifies whether Preservation Lock is enabled for the policy. Valid values are:

    - $true: Preservation Lock is enabled for the policy. No one -- including an administrator -- can turn off the policy or make it less restrictive.
    - $false: Preservation Lock isn't enabled for the policy. This is the default value.

    After a policy has been locked, no one can turn off or disable it, or remove apps from the policy. The only ways that you can modify the policy are by adding apps to it, or extending its duration. A locked policy can be increased or extended, but it can't be reduced, disabled, or turned off.

    Therefore, before you lock a policy, it's critical that you understand your organization's compliance requirements, and that you don't lock a policy until you are certain that it's what you need.

  defaultValue: None
  position: Named
  aliases: ""
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    The WhatIf switch doesn't work in Security & Compliance Center PowerShell.

  defaultValue: None
  position: Named
  aliases: wi
  applicable:
  - Security & Compliance Center
  parameterValueGroup: ""
applicable:
- Security & Compliance Center
uid: ExchangePowerShell.New-AppRetentionCompliancePolicy
name: New-AppRetentionCompliancePolicy
description: |-
  \*-AppRetentionCompliance\* cmdlets are used for policies with adaptive policy scopes and all static policies that cover Teams private channels, Yammer chats, and Yammer community messages. Eventually, you'll use these cmdlets for most retention locations and policy types. The \*-RetentionCompliance\* cmdlets will continue to support Exchange and SharePoint locations primarily. For policies created with the \*-AppRetentionCompliance\* cmdlets, you can only set the list of included or excluded scopes for all included workloads, which means you'll likely need to create one policy per workload.

  To use this cmdlet in Security & Compliance Center PowerShell, you need to be assigned permissions. For more information, see [Permissions in the Microsoft 365 compliance center](https://docs.microsoft.com/microsoft-365/compliance/microsoft-365-compliance-center-permissions).
metadata:
  external help file: Microsoft.Exchange.TransportMailflow-Help.xml
  online version: https://docs.microsoft.com/powershell/module/exchange/new-appretentioncompliancepolicy
  applicable: Security & Compliance Center
  title: New-AppRetentionCompliancePolicy
  schema: 2.0.0
  author: chrisda
  ms.author: chrisda
  ms.reviewer: ""
